@page "/"
@using DataHandlerLibrary.Models
@using EntityFrameworkDatabaseLibrary.Models
@using EposRetail.Models
@using EposRetail.Services
@using EposRetail.Components.Pages.RepeatComponents
@using DataHandlerLibrary.Services
@inject ScreenInfoService ScreenInfoService
@inject ProductServices productServices
@inject IJSRuntime JS

@* <h3 class="text-center">Checkout Dashboard</h3> *@
<div class="d-flex flex-column vh-100 mt-1">
    <div class="container-fluid">
        <!-- Make the row full height and align items to the start -->
        <div class="d-flex align-items-start">
            <div class="col-md-6 row">
                <div class="mb-2">
                    <input type="text" @ref=searchBox @bind-value="searchText" @bind-value:event="oninput" @onkeydown="SearchKeyDown" class="form-control" placeholder="Search for products or enter amount..." />
                </div>

                <div id="checkoutTable" class="table-responsive" style=@tableStyle>
                    <table class="table table-bordered table-striped align-middle" style="table-layout:fixed; width:100%;">
                        <colgroup>
                            <col style="width: 10%;">
                            <col style="width: 40%;">
                            <col style="width: 20%;">
                            <col style="width: 15%;">
                            <col style="width: 15%;">
                        </colgroup>
                        <thead class="table-primary">
                            <tr>
                                <th class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">Qty</th>
                                <th class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">Product Name</th>
                                <th class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">Promotion</th>
                                <th class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">Unit Price</th>
                                <th class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (salesBaskets.Count > 0 && salesBaskets[holdBasketIndex].SalesItemsList != null)
                            {

                                foreach (var item in salesBaskets[holdBasketIndex].SalesItemsList)
                                {

                                    <tr>
                                        <td class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">@item.Product_QTY</td>
                                        <td class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">@item.Product.Product_Name</td>
                                        <td class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">@item.Promotion</td>
                                        <td class="text-truncate" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">@item.Product_Amount.ToString("C2")</td>
                                        <td class="text-truncate fw-bold fs-5" style="overflow:hidden; text-overflow:ellipsis; white-space:nowrap;">
                                            @item.Product_Total_Amount.ToString("C2")
                                        </td>
                                    </tr>
                                }




                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <td colspan="4" class="text-end fw-bold">Grand Total:</td>
                                <td class="fw-bold fs-5">
                                    @(
                                        salesBaskets != null && salesBaskets.Count > 0
                                        ? (salesBaskets[holdBasketIndex].SalesItemsList != null && salesBaskets[holdBasketIndex].SalesItemsList.Count > 0
                                        ? salesBaskets[holdBasketIndex].SalesItemsList.Sum(s => s.Product_Total_Amount).ToString("C2")
                                        : "0.00")
                                        : "0.00"
                                        )
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="col-md-12 mb-2">
                    <div class="d-flex gap-2 mb-2">
                        <button class="col-md-3 btn btn-danger d-flex flex-column align-items-center flex-fill">
                            <img src="images/icons/account_balance_wallet_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <span class="fw-bold">Card</span>
                        </button>
                        <button class="col-md-3 btn btn-warning d-flex flex-column align-items-center flex-fill">
                            <img src="images/icons/liquor.png" class="img-fluid mb-2" />
                            <span class="fw-bold">Qty</span>
                        </button>
                        <button class="col-md-3 btn btn-success d-flex flex-column align-items-center flex-fill">
                            <img src="images/icons/money_bag_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <span class="fw-bold">Cash</span>
                        </button>
                        <button class="col-md-3 btn-light d-flex flex-column align-items-center flex-fill" @onclick="MoreSalesButtonClick">
                            <img src=@leftCollapseButtonPanel class="img-fluid mb-2" />
                            <span class="fw-bold">@leftPanelLabel</span>
                        </button>
                    </div>
                    <div class="@moreSalesButtonsClass">
                        <div class="col-md-12 mb-2">
                            <div class="d-flex gap-2 mb-2">
                                <button class="col-md-3 btn btn-danger d-flex flex-column align-items-center flex-fill">
                                    <img src="images/icons/remove_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                    <span class="fw-bold">Void Line</span>
                                </button>
                                <button class="col-md-3 btn btn-warning d-flex flex-column align-items-center flex-fill">
                                    <img src="images/icons/front_hand_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                    <span class="fw-bold">Hold</span>
                                </button>
                                <button class="col-md-3 btn btn-danger d-flex flex-column align-items-center flex-fill">
                                    <img src="images/icons/money_off_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                    <span class="fw-bold">Void Basket</span>
                                </button>
                                <button class="col-md-3 btn btn-light d-flex flex-column align-items-center flex-fill">
                                    <img src="images/icons/receipt_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                    <span class="fw-bold">Receipt</span>
                                </button>
                            </div>
                            <div class="col-md-12 mb-2">
                                <div class="d-flex gap-2 mb-2">
                                    <button class="col-md-3 btn btn-success d-flex flex-column align-items-center flex-fill">
                                        <img src="images/icons/search_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                        <span class="fw-bold">Enquiry</span>
                                    </button>
                                    <button class="col-md-3 btn btn-warning d-flex flex-column align-items-center flex-fill">
                                        <img src="images/icons/send_money_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                        <span class="fw-bold">Refund</span>
                                    </button>
                                    <button class="col-md-3 btn btn-success d-flex flex-column align-items-center flex-fill">
                                        <img src="images/icons/add_box_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                        <span class="fw-bold">New Product</span>
                                    </button>
                                    <button class="col-md-3 btn btn-light d-flex flex-column align-items-center flex-fill">
                                        <img src="images/icons/account_balance_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                                        <span class="fw-bold">Office</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>




            </div>



            <div class="row col-md-12 mb-2">
                <div class="col-md-6 gap-2 d-flex align-items-start ms-2 mb-2">
                    @if (screenModel.Height < 800 && displayGenericButtons)
                    {
                        <EposRetail.Components.Pages.RepeatComponents.GenericGambleButtons></EposRetail.Components.Pages.RepeatComponents.GenericGambleButtons>
                        //gamble buttons
                    }
                    else if (screenModel.Height < 800 && !displayGenericButtons)
                    {
                        <EposRetail.Components.Pages.RepeatComponents.GenericRestrictedButtonsComponents></EposRetail.Components.Pages.RepeatComponents.GenericRestrictedButtonsComponents>
                    }
                    else if (screenModel.Height > 800)
                    {
                        <EposRetail.Components.Pages.RepeatComponents.GenericRestrictedButtonsComponents></EposRetail.Components.Pages.RepeatComponents.GenericRestrictedButtonsComponents>

                    }



                    @if (screenModel.Height < 800)
                    {
                        <button @onclick="DisplayGenericButtonClick" class="btn btn-light d-flex flex-column align-items-center flex-fill">
                            <img src="@collapseButtonImage" class="img-fluid mb-2" />
                            <span class="fw-bold">@collapseButtonLabel</span>
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-light background-colour-light-green d-flex flex-column align-items-center flex-fill">
                            <img src="images/icons/nutrition_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <span class="fw-bold">Fruit & Veg</span>
                        </button>
                    }
                </div>

                @if (screenModel.Height < 800 && displayGenericButtons)
                {
                    <EposRetail.Components.Pages.RepeatComponents.PayoutButtonComponents></EposRetail.Components.Pages.RepeatComponents.PayoutButtonComponents>
                }

                @if (screenModel.Height < 800 && !displayGenericButtons)
                {
                    <EposRetail.Components.Pages.RepeatComponents.GenericCashSuggestionButtonsComponent></EposRetail.Components.Pages.RepeatComponents.GenericCashSuggestionButtonsComponent>
                }

                @if (screenModel.Height > 800)
                {
                    <EposRetail.Components.Pages.RepeatComponents.PayoutButtonComponents PayoutClick="@payoutActionModel" />
                    <EposRetail.Components.Pages.RepeatComponents.GenericCashSuggestionButtonsComponent></EposRetail.Components.Pages.RepeatComponents.GenericCashSuggestionButtonsComponent>
                }
                <div class="col-md-6 d-flex gap-2 align-items-start ms-2 m-2">

                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                        <span class="fw-bold">7</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">8</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">9</span>
                    </button>

                </div>
                <div class="col-md-6 d-flex gap-2 align-items-start ms-2 m-2">

                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">4</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">5</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">6</span>
                    </button>

                </div>
                <div class="col-md-6 d-flex gap-2 align-items-start ms-2 m-2">

                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">1</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">2</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">3</span>
                    </button>

                </div>
                <div class="col-md-6 d-flex gap-2 align-items-start ms-2 m-2">

                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">0</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/payments_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">00</span>
                    </button>
                    <button class="btn btn-light background-colour-light-blue d-flex flex-column align-items-center flex-fill">
                        <img src="images/icons/clear_all_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />

                        <span class="fw-bold">Clear</span>
                    </button>

                </div>




            </div>


        </div>
        @* <div class="@cardsDisplayClass"> *@
        <div class="col-md-12">
            <!-- Make cards horizontal using flex and grid columns for consistent width -->
            <div class="row me-4">
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body d-flex background-colour-light-green flex-column align-items-center">
                            <img src="images/icons/inventory_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <p class="card-text text-center">Refill Products Count: 12</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body d-flex background-colour-light-yellow flex-column align-items-center">
                            <img src="images/icons/timer_off_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <p class="card-text text-center">Expiry Products Count: 12</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body d-flex background-colour-light-red flex-column align-items-center">
                            <img src="images/icons/trolley_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png" class="img-fluid mb-2" />
                            <p class="card-text text-center">Shortage Products Count: 12</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <GenericMessageModal IsVisible="@showModal"
                         Title="@modalTitle"
                         Message="@modalMessage"
                         PrimaryButtonText="OK"
                         PrimaryAction="@OnModalOk"
                         SecondaryButtonText="Cancel"
                         OnClose="@OnModalClose" />

    @* </div> *@
</div>





@code {
    ElementReference searchBox;

    string searchText = "";

    string tableStyle = "height: 512px; overflow-y: auto";
    string leftPanelLabel = "More";
    string moreSalesButtonsClass = "d-none";
    // string cardsDisplayClass = "d-none";


    string leftCollapseButtonPanel = "images/icons/add_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";
    string collapseButtonLabel = "More";
    string collapseButtonImage = "images/icons/add_box_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";

    bool displayGenericButtons = true;

    ScreenModel screenModel = new ScreenModel();

    private bool showModal = false;
    private string modalTitle = "Notice";
    private string modalMessage = "This is a message.";


    //Checkout Objects
    int holdBasketIndex = 0;
    List<SalesBasket> salesBaskets = new List<SalesBasket>();

    // Method to show the modal
    private void ShowModal(string title, string message)
    {
        modalTitle = title;
        modalMessage = message;
        showModal = true;
    }

    // Modal button/callback handlers
    private Task OnModalOk()
    {
        showModal = false;
        return Task.CompletedTask;
    }

    private Task OnModalClose()
    {
        showModal = false;
        return Task.CompletedTask;
    }

    private void SetFocusOnSearchBox()
    {
        searchText = "";
        searchBox.FocusAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        screenModel = ScreenInfoService.GetScreenSize();
        if (screenModel.Height < 800)
        {
            displayGenericButtons = false;
            tableStyle = "height: 425px; overflow-y: auto";
            collapseButtonLabel = "More";
        }
        else
        {
            displayGenericButtons = true;
            tableStyle = "height: 512px; overflow-y: auto";
            collapseButtonLabel = "Collapse";
        }
    }



    private async void SearchKeyDown(KeyboardEventArgs e)
    {
        try
        {
            if (e.Key == "Enter")
            {
                if (!string.IsNullOrEmpty(searchText))
                {
                    if (salesBaskets.Count < 1)
                    {
                        InitializeSalesTransaction(false);
                    }

                    var product = await productServices.GetProductByBarcode(searchText);
                    if (product != null)
                    {
                        if (product.Is_activated == false)
                        {
                            ShowModal("Product Not Activated", "This product is not activated. Please activate it before adding to the basket.");
                            SetFocusOnSearchBox();
                            return;
                        }
                        else
                        {
                            AddProductToBasket(product);

                        }
                    }
                    StateHasChanged();
                    await Task.Yield();
                    await JS.InvokeVoidAsync("scrollTableToBottom");

                }

                else
                {
                    SetFocusOnSearchBox();
                    return;
                }
            }
            else
            {
                searchBox.FocusAsync();
            }
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine($"Error: {ex.Message}");
        }

    }


    private async void AddProductToBasket(Product fetchProduct)
    {
        if (salesBaskets[holdBasketIndex].SalesItemsList == null)
        {
            salesBaskets[holdBasketIndex].SalesItemsList = new();
        }
        if (salesBaskets[holdBasketIndex].SalesItemsList.Exists(x => x.Product_ID == fetchProduct.Product_ID))
        {
            SalesItemTransaction item = salesBaskets[holdBasketIndex].SalesItemsList.Find(x => x.Product_ID == fetchProduct.Product_ID);
            if (item != null)
            {
                item.Product_QTY += 1;
                item.Product_Total_Amount = item.Product_QTY * fetchProduct.Product_Selling_Price;
            }
        }
        else
        {
            salesBaskets[holdBasketIndex].SalesItemsList.Add(new SalesItemTransaction
            {
                Product_ID = fetchProduct.Product_ID,
                Product = fetchProduct,
                Product_QTY = 1,
                Product_Amount = fetchProduct.Product_Selling_Price,
                Product_Total_Amount = fetchProduct.Product_Selling_Price,
            });
        }
    
        SetFocusOnSearchBox();
    }

    private void InitializeSalesTransaction(bool isRefund)
    {

        if (salesBaskets.Count < 1)
        {
            salesBaskets.Add(new SalesBasket());
        }
        if (salesBaskets[holdBasketIndex].Transaction == null)
        {
            // if (dayLog == null)
            // {
            //     dayLog = InitializeProgramService.GetDayLog();
            // }

            salesBaskets[holdBasketIndex].Transaction = new SalesTransaction
                {
                    Date_Created = DateTime.Now,
                    Sale_Start_Date = DateTime.Now,
                    Is_Refund = 0,
                    Till_ID = 0,
                    User_ID = 0,
                    DayLog_ID = 0,
                    Is_Printed = 0,
                    SaleTransaction_Discount = 0,
                    SaleTransaction_Promotion = 0,
                    SaleTransaction_Change = 0,
                    SaleTransaction_Payout = 0,
                    SaleTransaction_CashBack = 0,
                    SaleTransaction_Cash = 0,

                };
            if (isRefund)
            {
                salesBaskets[holdBasketIndex].Transaction.Is_Refund = 1;
            }

            salesBaskets[holdBasketIndex].SalesItemsList = new();
        }

    }

    private void HandleGenericItemClick()
    {
        int i = 0;
        // Your logic here
    }

    private void payoutActionModel(PayoutActionModel payoutActionModel)
    {
        int i = 0;
        // Your logic here
    }

    private void DisplayGenericButtonClick()
    {
        if (displayGenericButtons)
        {
            displayGenericButtons = false;
            collapseButtonLabel = "More";
            collapseButtonImage = "images/icons/add_box_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";
        }
        else
        {
            displayGenericButtons = true;
            collapseButtonLabel = "Collapse";
            collapseButtonImage = "images/icons/hide_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";
        }
    }

    private void MoreSalesButtonClick()
    {
        if (moreSalesButtonsClass == "d-none")
        {
            moreSalesButtonsClass = "";
            //cardsDisplayClass = "";
            leftPanelLabel = "Collapse";
            leftCollapseButtonPanel = "images/icons/hide_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";
            if (screenModel.Height > 800)
                tableStyle = "height: 335px; overflow-y: auto";
            else
                tableStyle = "height: 225px; overflow-y: auto";

        }
        else
        {
            moreSalesButtonsClass = "d-none";
            //cardsDisplayClass = "d-none";
            leftPanelLabel = "More";
            leftCollapseButtonPanel = "images/icons/add_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.png";
            if (screenModel.Height > 800)
                tableStyle = "height:512px; overflow-y: auto";
            else
                tableStyle = "height: 425px; overflow-y: auto";

        }

    }
}
