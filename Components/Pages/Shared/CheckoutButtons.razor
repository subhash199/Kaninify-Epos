@using EposRetail.Models
@using EposRetail.Constants

@inject NavigationManager NavigationManager
<div class="col-md-12 mb-2">
    <div class="d-flex gap-2 mb-2">
        <button class="col-md-3 btn background-colour-light-red d-flex flex-column align-items-center flex-fill"
                @onclick="() => OnPaymentClicked.InvokeAsync(PaymentType.Card)">
            <img src="@CheckoutConstants.Images.CardIcon" class="img-fluid mb-2" />
            <span class="fw-bold">Card</span>
        </button>
        <button class="col-md-3 btn background-colour-light-blue d-flex flex-column align-items-center flex-fill"
                @onclick="OnQtyClicked">
            <img src="images/icons/svg/liquor_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
            <span class="fw-bold">Qty</span>
        </button>
        <button class="col-md-3 btn background-colour-light-green d-flex flex-column align-items-center flex-fill"
                @onclick="() => OnPaymentClicked.InvokeAsync(PaymentType.Cash)">
            <img src="@CheckoutConstants.Images.CashIcon" class="img-fluid mb-2" />
            <span class="fw-bold">Cash</span>
        </button>
        <button class="col-md-3 btn-light d-flex flex-column align-items-center flex-fill"
                @onclick="MoreCheckoutClick">
            <img src="@State.LeftCollapseButtonPanel" class="img-fluid mb-2" />
            <span class="fw-bold">@State.LeftPanelLabel</span>
        </button>
    </div>

    @if (!IsCollapsed)
    {
        <div class="col-md-12 mb-2">
            <div class="d-flex gap-2 mb-2">
                <button class="col-md-3 btn background-colour-light-red d-flex flex-column align-items-center flex-fill"
                        @onclick="() => OnVoidLineClicked.InvokeAsync()">
                    <img src="images/icons/svg/remove_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                    <span class="fw-bold">Void Line</span>
                </button>
                <button class="col-md-3 btn background-colour-light-blue d-flex flex-column align-items-center flex-fill"
                        @onclick="() => OnHoldClicked.InvokeAsync()">
                    <img src="images/icons/svg/front_hand_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                    <span class="fw-bold">@GetHoldButtonText()</span>
                </button>
                <button class="col-md-3 btn background-colour-light-red d-flex flex-column align-items-center flex-fill"
                        @onclick="() => OnVoidBasketClicked.InvokeAsync()">
                    <img src="images/icons/svg/money_off_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                    <span class="fw-bold">Void Basket</span>
                </button>
                <button class="col-md-3 btn btn-light d-flex flex-column align-items-center flex-fill">
                    <img src="images/icons/svg/receipt_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                    <span class="fw-bold">Receipt</span>
                </button>
            </div>
            <div class="col-md-12 mb-2">
                <div class="d-flex gap-2 mb-2">
                    <button class="col-md-3 btn background-colour-light-green d-flex flex-column align-items-center flex-fill"
                            @onclick="() => OnEnquiryClicked.InvokeAsync()">
                        <img src="images/icons/svg/search_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                        <span class="fw-bold">Enquiry</span>
                    </button>
                    <button class="col-md-3 btn background-colour-light-blue d-flex flex-column align-items-center flex-fill"
                            @onclick="() => OnRefundClicked.InvokeAsync()">
                        <img src="images/icons/svg/send_money_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                        <span class="fw-bold">Refund</span>
                    </button>
                    <button class="col-md-3 btn background-colour-light-green d-flex flex-column align-items-center flex-fill"
                            @onclick=HandleOnDiscountClick>
                        <img src="images/icons/svg/loyalty_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                        <span class="fw-bold">Discount</span>
                    </button>
                    <button class="col-md-3 btn btn-light d-flex flex-column align-items-center flex-fill"
                            @onclick="NavigateToBackoffice">
                        <img src="images/icons/svg/account_balance_24dp_1F1F1F_FILL0_wght400_GRAD0_opsz24.svg" class="img-fluid mb-2" />
                        <span class="fw-bold">Office</span>
                    </button>
                </div>
            </div>
        </div>
    }

</div>

@code {
    [Parameter] public CheckoutState State { get; set; } = new();
    [Parameter] public EventCallback<PaymentType> OnPaymentClicked { get; set; }
    [Parameter] public EventCallback OnVoidLineClicked { get; set; }
    [Parameter] public EventCallback OnVoidBasketClicked { get; set; }
    [Parameter] public EventCallback OnQtyClicked { get; set; }
    [Parameter] public EventCallback OnHoldClicked { get; set; }
    [Parameter] public EventCallback<bool> OnMoreSalesClicked { get; set; }
    [Parameter] public EventCallback OnEnquiryClicked { get; set; }
    [Parameter] public EventCallback OnRefundClicked { get; set; }
    [Parameter] public EventCallback OnDiscountClicked { get; set; }

    bool IsCollapsed = true;

    private async Task MoreCheckoutClick()
    {
        IsCollapsed = !IsCollapsed;
        State.LeftCollapseButtonPanel = IsCollapsed ? CheckoutConstants.Images.AddIcon : CheckoutConstants.Images.HideIcon;
        State.LeftPanelLabel = IsCollapsed ? "More" : "Collapse";        
        await OnMoreSalesClicked.InvokeAsync(IsCollapsed);

    }

    private string GetHoldButtonText()
    {
        // Check if there are any held baskets (baskets other than the current active one)
        bool hasHeldBaskets = State.SalesBaskets?.Count > 1;
        return hasHeldBaskets ? "Recall" : "Hold";
    }

    private async Task HandleOnDiscountClick()
    {
        await OnDiscountClicked.InvokeAsync();
    }

    private void NavigateToBackoffice()
    {
        NavigationManager.NavigateTo("/backoffice");
    }

}